



Introduction


Filecalibur ist ein Werkzeug mit vielen Anwendungen im Bereich des Dateienmanagements. Der Schlüssel zum Verständnis von Filecaliburs Fähigkeiten ist die Unterscheidung zwischen Dateien und daraus brechneten Hashwerten:

Datei
Eine Datei ist eine Ansammlung 0/1 Werte (Bits) in einem Speichersystem. Die Dateien werden in Ordnern strukturiert. Dateien können mit einigen Byte (Byte = 8 0/1 Werte) klein oder mit einigen Gigabyte (1 Gigabyte = 1 000 000 000 Byte) sehr groß sein. Wir sollten davon ausgehen, dass jedes einzelne Byte wichtig ist und wenn es verändert wurde, sich der Inhalt der Datei ändert. Im schlimmsten Fall wird die Datei fehlerhaft und der Inhalt unlesbar.

Hash
Man kann sich einen Hashwert (kurz Hash) als einen Fingerabdruck einer Datei vorstellen. Es ist eine mathematische Funktion, welche die gesammte Datei einliest und aufsummiert, um daraus eine kryptische Zahlen/Buchstabenkombination zu berechnen. Es gibt verschiedene Rechenmethoden die unterschiedliche Ergebnisse produzieren. Ein Hash der Funktion md5 sieht etwa so aus d41d8cd98f00b204e9800998ecf8427e, der der Funktion sha1 so da39a3ee5e6b4b0d3255bfef95601890afd80709.

Drei Punkte sind besonders wichtig:
1) Ein Hash einer bestimmten Funktion hat immer die selbe Länge, unabhängig von der Größe der Datei.
2) Jedes einzelne Bit fließt in den Hash ein und, falls es geändert wird, ändert sich auch der Hash.
3) Ein Hash ist einzigartig für jede Datei, jedoch haben identische Dateikopien identische Hashwerte.
Tatsächlich können in extrem seltenen Fällen verschiedene Dateien den gleichen Hash haben, was mann eine Kollision nennt. Für unsere Anwendungen hier können Kollisionen ignoriert werden.

Filecalibur kann die jeweiligen Hashwerte für alle Dateien in einem bestimmten Ordner berechnen inklusive aller Dateien in Unterordnern. Um genau zu sein sammelt Filecalibur nur die Eingaben und ruft das unabhängige Programm hashdeep auf, das die Hashberechnung vornimmt und das Ergebnis in eine Textdatei schreibt. Diese Textdatei nennen ich eine Collection. In dieser Collection entspricht jede Zeile einer Datei. Es stehen dort die Dateigröße, die verschiedenen Hashes und der Dateiname mit dem zugehörigen Pfad. Die Unabhängigkeit dieser Informationen von der Software, die zu der Berechnung benutzt wurde, ist eine praktische Eigenschaft dieser Informationen. Die gleiche Datei wird den selben Hash, Größe und Namen/Pfadinformation haben wenn man irgendeine andere Software zu der Berechnung benutzt. Filcalibur stellt die Collectiondateien als Tabelle dar.
An dieser Stelle kann man aufhören, mit den tatsächlichen Dateien zu arbeiten und sich auf das Textdokument mit den Hashes, die Collection konzentrieren. Identische Dateien können über identische Hashwerte identifiziert werden. Unterordner können aus einer Collection extrahiert oder entfernt nur anhand ihrer Pfadinformationen. Das Hauptanwendungsgebiet liegt jedoch dem Vergleich verschiedener Collections durch positive and negative matching;

Positive Matching
Eine Collection A wird Hash für Hash mit Collection B verglichen. Nur wenn ein bestimmter Hash in beiden Collectionen gefunden wird, wird die Information in Collection C geschrieben. Diese Funktion ist nützlich um Dateien zu identifizieren, die in beiden Collections vrohanden sind.

Negative Matching
Jeder Hash der Collection A wird mit den Hashes der Collection B verglichen. Nur wenn der Hash nicht in Collection B ist werden die jeweiligen Informationen in Collection C geschrieben. Diese Funktion ist nützlich um unbekannte Hashes in Collection A zu identifizieren. Wichtig ist hierbei, dass wir nur Dateien finden die in Collection A sind und nicht in Collection B. Dateien die nur in Collection B sind und nicht in Collection A gehen verloren oder werden ignoriert. Sollten diese Dateien von Interesse sein, so muss man die Collections vertauschen.

Die Stärke von Filecalibur liegt in der vielfäligen Möglichkeiten diese Operationen zu kombinieren, um exakt die Gruppe Dateien zu erhalten, die man sehen möchte, selbst bei sehr großen Datenmengen.

Zuletzt bietet Filecalibur mit den "Gefährlichen Werkzeugen" die Möglichkeit, die Dateien auf der Festplatte zu manipulieren. Filecalibur kann jede einzelne Datei einer Collection von dem Speichersystem löschen. Die Dateien werden an diesem Punkt wirklich und unwiederbringlich gelöscht.

Achtung: Ich programmiere Software in meiner Freizeit zum Spaß und ohne komerzielles Interesse. Diese Software stelle ich unter den Bedingungen der Gnu Public License (GPL) zur Verfügung. Es gibt keine Garantie für Irgendetwas - Die Benutzung ist auf eigenes Risiko! Ich benutze die Software schon seit Jahren ohne Probleme, aber andere Computer können zu komischen Ergebnissen führen. Teste die Software erst an unkritischen Daten und verwende sie erst dann für irgendetwas wichtiges, wenn du sicher bist, dass sie so funktioniert wie sie soll. Sollte ein Bug auftreten kontaktiert mich bitte mit einer Beschreibung, so dass ich den Fehler reproduzieren kann.
Diese Software nutzt hashdeep, rsync und WinMerge, deren Lizenzen in ihrem Unterordner in Filecalibur zu finden sind.


Funktionen

In diesem Abschnitt werden die wichtigsten Funktionen von Filecalibur vorgestellt.

hashDeep - Berechne Hashes
Im Menü hashDeep->Berechne Hashes auswählen. Im Dialogfenster muss der Ordner angegeben werden, in dem die Dateien gehashed werden sollen und eine Datei, in der die Collection gespeichert werden soll. Basierend auf diesen Informationen berechnet hashdeep die Hashes der Dateien. Filcalibur wird das Ergebnis darstellen wenn hashdeep die brechnung beendet hat. Bedenke, dass jede einzelne Datei komplett eingelesen werden muss, um den Hash zu berechnen. Wenn Terabytes an Daten verarbeitet werden müssen kann diese Berechnung schon Tage dauern. In diesem Fall kann es sinnvoll sein, die Berechnung über Nacht laufen zu lassen.

Collection - Ändere Pfad
Im Menü Collection->Ändere Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Die Felder dazwischen können genutzt werden, um die Namen/Pfad-Information durch Hinzufügen oder Entfernen zu verändern. Beachte, dass du im linken Bereich des Pfades arbeitest der den obersten Ordnern entspricht. Es kann genutzt werden um den Namen des Root-Ordners zu ändern oder um die absoluten Pfadangaben in relative umzuwandeln. Oder man kann den Laufwerksbuchstaben ändern.
Außerdem lässt sich die Reihenfolge der Dateien sortieren. Das ist notwendig, da die Reihenfolge auch von der Dauer der Hashberechnung abhängt. Durch die Sortierung in Kombination mit der Anpassung der Trennzeichen erhält man eine Reihenfolge die für den Vergleich verschiedener Collections geeignet ist.

Collection - Entferne Pfad
Im Menü Collection->Entferne Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Im Feld dazwischen muss der Pfad angegeben werden, der entfernt werden soll. Alle Dateien mit passender Namen/Pfad-Information werden entfernt und die restlichen Dateien in der neuen Collection gespeichert. Es ist nützlich, um einen Unterordner aus einer Collection zu entfernen und den Rest zu behalten.

Collection - Extrahiere Pfad
Im Menü Collection->Extrahiere Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Im Feld dazwischen muss der Pfad angegeben werden, der extrahiert werden soll. Alle Dateien mit passender Namen/Pfad-Information werden in der neuen Collection gespeichert und der Rest entfernt. Es ist nützlich, um einen Unterordner aus einer Collection zu extrahieren.

Collection - Kombiniere Dateien
Im Menü Collection->Kombiniere Dateien auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei und eine zweite Collectiondatei angegeben werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Der Inhalt beider Collections wird zusammengeführt und in der neuen Collection gespeichert. Es ist nützlich, um Ordner zu einer Collection hinzuzufügen.

Collection - Positive Hashberechnung
Im Menü Collection->Positive Hashberechnung auswählen. Im Dialogfenster muss eine Test-Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zusätzlich muss eine Hash-Bibliothekcollection ausgewählt werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Alle Hashwerte der Dateien in der Test-Collection werden mit den Hashwerten der Hash-Bibliothekcollection verglichen. Nur wenn ein Hashwert in der Hash-Bibliothekcollection vorhanden ist, werden die Dateiinformationen der Test-Collection in der neuen Collection gespeichert. Es ist nützlich, um identische Dateien in verschiedenen Collection zu finden.

Collection - Negative Hashberechnung
Im Menü Collection->Negative Hashberechnung auswählen. Im Dialogfenster muss eine Test-Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zusätzlich muss eine Hash-Bibliothekcollection ausgewählt werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Alle Hashwerte der Dateien in der Test-Collection werden mit den Hashwerten der Hash-Bibliothekcollection verglichen. Nur wenn ein Hashwert in der Hash-Bibliothekcollection NICHT vorhanden ist, werden die Dateiinformationen der Test-Collection in der neuen Collection gespeichert. Es ist nützlich, um unbekannte Dateien in der Test-Collection zu finden, die nicht in der Hash-Bibliothekcollection sind. Diese Funktion findet nur Dateien, die in der Test-Collection sind und nicht in der Hash-Bibliothekcollection. Dateien die nur in der Hash-Bibliothekcollection werden ignoriert und finden sich nicht in der Ergebniscollection. Sollten diese gefunden werden muss man die Test-Collection und Hash-Bibliothekcollection vertauschen.

Collection - Finde Duplikate
Im Menü Collection->Finde Duplikate auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Der Inhalt der Collection wird auf mehrfach vorhandene Hashwerte geprüft und nur diese in der neuen Collection gespeichert. Es ist nützlich, um Duplikate in einer Collection zu finden.

Collection - Vergleiche zwei Dateien
Im Menü Collection->Vergleiche zwei Dateien auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei und eine zweite Collectiondatei angegeben werden. Beide Dateien werden mit der Software WinMerge verglichen und dargestellt. Es ist nützlich, um Unterschiede in zwei Collections zu finden und zu analysieren.
Um beste Ergebnisse zu erhalten sollte die Pfadinformationen identisch sein. Falls zwei Ordner auf verschiedenen Laufwerken verglichen werden sollen, so empfielt es sich, die absoluten Pfade in relative Pfade mittes der Ändere Pfad Funktion umzuwandeln. Die Collections sollten auch sortiert werden, damit in beiden Collectionen die Dateien die gleiche Reihenfolge haben. Nun ist der Vergleich viel Aussagefähiger.

Gefährliche Werkzeuge - Rsync Ordner
Im Menü Gefährliche Werkzeuge->Rsync Ordner auswählen. Im Dialogfenster muss ein Quellordner und ein Zielordner angegeben werden. Filecalibur wird rsync benutzen, um alle Dateien vom Quellordner in den Zielordner zu kopieren. Wenn "Lösche Dateien..." ausgewählt ist, so werden alle Dateien die im Quellordner fehlen auch im Zielordner gelöscht. Es ist nützlich, um den Inhalt zweier Ordner abzugleichen.
Achtung: Sei sehr vorsichtig mit dieser Funktion. Wenn die Ordner vertauscht werden und ein leerer Ordner als Quellordner und der Orginalordner als Zielordner angegeben werden löscht rsync alles in Zielordner! Dadurch werden beide Ordner leer und haben jetzt den gleichen Inhalt!

Gefährliche Werkzeuge - Lösche Dateien nach Listeneinträgen
Im Menü Gefährliche Werkzeuge->Lösche Dateien nach Listeneinträgen auswählen. Im Dialogfenster muss eine Collectiondatei angegeben werden. Zur Sicherheit und um verwechselte Collections auszuschließen muss der Zielordner angegeben werden, in dem Filecalibur Dateien löschen darf. Dieser Ordner muss dem Pfad der Dateien in der Collection entsprechen. Filecalibur löscht dann alle Dateien der Collection von dem Datenträger.
Achtung: Sei sehr vorsichtig mit dieser Funktion da die Dateien ohne Undo gelöscht werden.

Gefährliche Werkzeuge - Lösche leere Ordner
Im Menü Gefährliche Werkzeuge->Lösche leere Ordner auswählen. Im Dialogfenster muss ein Ordner angegeben werden. Filecalibur wird alle leeren Ordner und Unterordner in diesem Verzeichnis löschen, wenn sie leer sind. Diese Funktion ist praktisch in Kombination mit Lösche Dateien nach Listeneinträgen, da diese Funktion oft leere Ordner zurücklässt. Sind diese entfernt so bleiben nur die Ordner mit Dateien übrig.


Anwendungsbeispiele

In diesem Abschnitt werden einige Einsatzgebiete für Filecalibur vorgestellt.

Backup

Es gib zwei grundsätzlich unterschiedliche Methoden, ein Backup zu machen. Entweder kann man darauf spezialisierte Programme verwenden, oder man kopiert einfach alle seine Daten auf eine externen Datenträger. Die erste Methode ist normalerweise schnell, automatisiert und unkompliziert, hat aber den Nachteil, dass man diese Software benötigt, um die Backupdateien zu nutzen. Der zweite Ansatz ist einfach und benötigt keine weitere Software, hat aber den Nachteil, dass man daran denken muss und das kopieren großer Datenmengen sehr viel Zeit benötigt. Der große Vorteil ist jedoch, dass das Backup ein zweites Orginal ist und sich wie dieses ohne Einschänkungen nutzen lässt.
Filecalibur kann bei der Erstellung eines Backups des zweiten Types helfen. Wenn man noch kein Backup hat sollte man die Daten einfach auf den externen Datenträger kopieren - es ist schneller als rsync. Hat man jedoch ein Backup möchte man eigentlich nur die veränderten Dateien überspielen. Das macht rsync viel schneller in dem es herausfindet was es kopieren muss und nur das überträgt (lese Gefährliche Werkzeuge - Rsync Ordner).
Aber es bleibt die  Frage offen: Sind beide Kopien absolut identisch? Um sicher zu sein berechnen wir die Hashes des Orginalordners und des Backupordners (lese hashDeep - Berechne Hashes). Das brauch Zeit, aber wenn die Berechnung fertig ist sollte man die Collectiondatei auch im Backup speichern. Jetzt kann man in beiden Collections die absoluten Pfade in relative umwandeln und die Collections sortieren (lese Collection - Ändere Pfad). Zuletzt vergleichen wir die beiden Collections und die einzigen Unterschiede sollten sich in den Kopfzeilen finden (lese Collection - Vergleiche zwei Dateien).

Crazy Ultrasafe Backup
Stellen wir uns vor wir haben besonders wichtige Daten, wie z. B. Bilder von den Kindern als sie klein waren oder Kopien unserer Zeugnisse. Diese Dateien sollten nie verloren gehen, egal was kommt. Zuerst braucht man mehr als ein Backupmedium, am Besten sind drei USB-Festplatten von verschiedenen Herstellern (um Herstellungsfehler zu vermeiden). Diese Festplatten sollten an drei verschiedenen Orten gelagert werden und einzeln upgedated werden. Niemals sollten sich alle drei an einem Ort befinden (um Verlust durch Feuer und Katastrophen zu vermeiden).
Das erste Backup wird wie oben beschrieben durchgeführt. Wichtig ist das Ergebnis der Hashberechnung (das Collectionfile) auch auf der externen Festplatte zu speichern.
Bei dem nächsten Backup sind wir nun wirklich vorsichtig. Es läuft in vier Schritten ab:
1) Sind die Daten, die wir kopieren wollen noch ok? Dazu berechnen wir die Hashes der Quelldateien (lese hashDeep - Berechne Hashes) und vergleichen es mit der Collectiondatei des alten Backups (lese Collection - Negative Hashberechnung). Nutzt man die neue Colletion als Test-Collection und die alte Backupcollection als Hash-Bibliothekcollection, so zeigt Filecalibur uns nur die neuen Dateien an und die Dateien mit Änderungen, die überschrieben werden. Tauscht man die beiden Collectionen so erhält man nur die alten Dateien, welche vom Backup gelöscht werden, und die Dateien mit Änderungen, die überschrieben werden. Zusätzlich kann man beide Collections mit WinMerge vergleichen und sich die Änderungen anzeigen lassen in dem man von Veränderung zu veränderung springt (lese Collection - Vergleiche zwei Dateien). Sind wir mit den Veränderungen glücklich (nichts ist verändert, was noch identisch sein sollte, keine Dateien fehlen die noch da sein sollten und nur neue Dateien die von uns zugefügt wurden) können wir den nächsten Schritt gehen.
Schritte 2 bis 4 werden für jedes externe Medium einzeln ausgeführt:
2) Gibt es Fehler auf dem externen Medium? Die Antwort sollte nein sein und man kann diesen Schritt auch überspringen, aber am besten fallen einem Fehler frühzeitig auf bevor die Platte ihre Funktion aufgibt. Also berechnen wir die Hashes des Mediums (lese hashDeep - Berechne Hashes), wandeln die Pfade in relative um, sortieren die Reihenfolge (lese Collection - Ändere Pfad) und vergleichen es mit der Collectiondatei des alten, gespeicherten Backups mit WinMerge vergleichen und sich die Änderungen anzeigen lassen (lese Collection - Vergleiche zwei Dateien). Alle Änderungen sollten in den Kopfzeilen sein, falls nicht hat sich das Backup verändert, was kein gutes Zeichen ist. Falls ja hat man auch überprüft, dass das gesammte Backup noch fehlerfrei lesbar war.
3) Jetzt synchonisieren wir die Daten. Mit rsync werden die Dateien auf das externe Medium geschrieben (lese Gefährliche Werkzeuge - Rsync Ordner). Sei besonders vorsichtig mit dem Quellen und Zielordner. Falls sie verwechselt werden überspielt man sein altes Backup über die neuen Daten und verliert alle Änderungen seit dem Backup.
4) Jetzt bleibt wieder die Frage- Sind die Kopien absolut identisch? Um sicher zu sein berechnen wir die Hashes des externen Mediums (lese hashDeep - Berechne Hashes), wandelt die absoluten Pfade in relative um und sortiert die Collection (lese Collection - Ändere Pfad). Zuletzt vergleichen wir die orginal Collection und die Collection des externen Mediums. Die einzigen Unterschiede sollten sich in den Kopfzeilen finden (lese Collection - Vergleiche zwei Dateien). Diese Datei wird auf dem externen Medium gespeichert für das nächste Backup.
Mit dieser Methode wird ein Datenverlust fast unmöglich. Der Nachteil ist, dass es einige Tage braucht bis alles am Platz ist. Glücklicherweise ist das meiste Rechenzeit und nur einige Minuten hands-on-time. Ich führe das etwa alle 6 Monate durch oder falls ich neue, wichtige Daten bekomme.

Finde Duplikate



Find Duplicates
Many times duplicates excist due to kopied files or folders. To find duplicates, calculate the hash of the folder were you expect duplicates in subfolders (see Hash Calculation). Then keep only the files were a hash was found more than one (see Collection - Find Duplicates). Now you can go through all duplicates.

Find Changes
Sometimes you want to visualize differences on your file system. Maybe you want to see which files are changed once you run a certain software. You can also use it to visualize the difference between two software package releases.
First calculate the hash of the drive were you expect changes in subfolders and save the collection as "initial" (see Hash Calculation). Then do the change or run the software in doubt. Calculate the hash of the drive were you expect changes in subfolders a second time and save the collection as "after" (see Hash Calculation). Sort the collections to get identical file order in both files (see Collection - Modify Path) and do negative Hashing with the collection file "initial" and collection file "after"  (see Collection - Negative Hashing). Only the new files and the changed files are displayed using the "after" collection as test collection and the "initial" collection as hash library collection. The files which were deleted as well as the changed files are displayed using the "initial" collection as test collection and the "after" collection as hash library collection. We can also compare both collections using WinMerge and jump from change to change (see Collection - Compare Files). 

Sort the Folder Mess
Computers have the tendency to get messy and the user the tendency to loose control. Imagine you have pictures from your last vacation. You copied them from your the camera to you computer at home. Some you renamed and modified to change the colors a bit. Then you copied it to the computer at work. Some were changed there in luch break and some were changed at home. A friend gave you some more pics wich were added as well. So how to sort this mess out when you try to merge the folders into one with all the pictures?
First, I would make a copy of all folders to avoid data loss in case this goes terribly wrong. Then we calculate the hash of each folder and save the collections (see Hash Calculation). Then we do positive matching with the "work" collection using the "camera" collection as hash library collection (see Collection - Positive Hashing). The resulting file contains only files of the "work" collection that are identical to the once in the camera folder, the unchanged ones. We delete them from the storage using the result colletion of the positive matching (see Dangerous Tools - Delete Files from List). If folders remain empty they can be removed as well (see Dangerous Tools - Delete Empty Directories). Now the steps are repeated with the "home" folder instead of the "work" folder. Last the files now present in the "home" folder can be compared in a similar fashion to the files in the "work" folder. As a result, all identical files are gone and only the modified or new files remain in their respective folder. They still need to be viewed and selected by hand to combine them in one folder, but the burden of the duplicate files was removed.


Frequently Asked Questions - FAQ

The file did not change, why does it have a different hash?
Mikrosoft Word/Excel, graphics files and mp3 files collect meta infomation additional to the content. So the content may be identical, but maybe some extra notes in word or the artist name in an mp3 file was changed. If only a bit changes, the hash will be totally different.



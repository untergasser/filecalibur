



Introduction


Filecalibur ist ein Werkzeug mit vielen Anwendungen im Bereich des Dateienmanagements. Der Schlüssel zum Verständnis von Filecaliburs Fähigkeiten ist die Unterscheidung zwischen Dateien und daraus brechneten Hashwerten:

Datei
Eine Datei ist eine Ansammlung 0/1 Werte (Bits) in einem Speichersystem. Die Dateien werden in Ordnern strukturiert. Dateien können mit einigen Byte (Byte = 8 0/1 Werte) klein oder mit einigen Gigabyte (1 Gigabyte = 1 000 000 000 Byte) sehr groß sein. Wir sollten davon ausgehen, dass jedes einzelne Byte wichtig ist und wenn es verändert wurde, sich der Inhalt der Datei ändert. Im schlimmsten Fall wird die Datei fehlerhaft und der Inhalt unlesbar.

Hash
Man kann sich einen Hashwert (kurz Hash) als einen Fingerabdruck einer Datei vorstellen. Es ist eine mathematische Funktion, welche die gesammte Datei einliest und aufsummiert, um daraus eine kryptische Zahlen/Buchstabenkombination zu berechnen. Es gibt verschiedene Rechenmethoden die unterschiedliche Ergebnisse produzieren. Ein Hash der Funktion md5 sieht etwa so aus d41d8cd98f00b204e9800998ecf8427e, der der Funktion sha1 so da39a3ee5e6b4b0d3255bfef95601890afd80709.

Drei Punkte sind besonders wichtig:
1) Ein Hash einer bestimmten Funktion hat immer die selbe Länge, unabhängig von der Größe der Datei.
2) Jedes einzelne Bit fließt in den Hash ein und, falls es geändert wird, ändert sich auch der Hash.
3) Ein Hash ist einzigartig für jede Datei, jedoch haben identische Dateikopien identische Hashwerte.
Tatsächlich können in extrem seltenen Fällen verschiedene Dateien den gleichen Hash haben, was mann eine Kollision nennt. Für unsere Anwendungen hier können Kollisionen ignoriert werden.

Filecalibur kann die jeweiligen Hashwerte für alle Dateien in einem bestimmten Ordner berechnen inklusive aller Dateien in Unterordnern. Um genau zu sein sammelt Filecalibur nur die Eingaben und ruft das unabhängige Programm hashdeep auf, das die Hashberechnung vornimmt und das Ergebnis in eine Textdatei schreibt. Diese Textdatei nennen ich eine Collection. In dieser Collection entspricht jede Zeile einer Datei. Es stehen dort die Dateigröße, die verschiedenen Hashes und der Dateiname mit dem zugehörigen Pfad. Die Unabhängigkeit dieser Informationen von der Software, die zu der Berechnung benutzt wurde, ist eine praktische Eigenschaft dieser Informationen. Die gleiche Datei wird den selben Hash, Größe und Namen/Pfadinformation haben wenn man irgendeine andere Software zu der Berechnung benutzt. Filcalibur stellt die Collectiondateien als Tabelle dar.
An dieser Stelle kann man aufhören, mit den tatsächlichen Dateien zu arbeiten und sich auf das Textdokument mit den Hashes, die Collection konzentrieren. Identische Dateien können über identische Hashwerte identifiziert werden. Unterordner können aus einer Collection extrahiert oder entfernt nur anhand ihrer Pfadinformationen. Das Hauptanwendungsgebiet liegt jedoch dem Vergleich verschiedener Collections durch positive and negative matching;

Positive Matching
Eine Collection A wird Hash für Hash mit Collection B verglichen. Nur wenn ein bestimmter Hash in beiden Collectionen gefunden wird, wird die Information in Collection C geschrieben. Diese Funktion ist nützlich um Dateien zu identifizieren, die in beiden Collections vrohanden sind.

Negative Matching
Jeder Hash der Collection A wird mit den Hashes der Collection B verglichen. Nur wenn der Hash nicht in Collection B ist werden die jeweiligen Informationen in Collection C geschrieben. Diese Funktion ist nützlich um unbekannte Hashes in Collection A zu identifizieren. Wichtig ist hierbei, dass wir nur Dateien finden die in Collection A sind und nicht in Collection B. Dateien die nur in Collection B sind und nicht in Collection A gehen verloren oder werden ignoriert. Sollten diese Dateien von Interesse sein, so muss man die Collections vertauschen.

Die Stärke von Filecalibur liegt in der vielfäligen Möglichkeiten diese Operationen zu kombinieren, um exakt die Gruppe Dateien zu erhalten, die man sehen möchte, selbst bei sehr großen Datenmengen.

Zuletzt bietet Filecalibur mit den "Gefährlichen Werkzeugen" die Möglichkeit, die Dateien auf der Festplatte zu manipulieren. Filecalibur kann jede einzelne Datei einer Collection von dem Speichersystem löschen. Die Dateien werden an diesem Punkt wirklich und unwiederbringlich gelöscht.

Achtung: Ich programmiere Software in meiner Freizeit zum Spaß und ohne komerzielles Interesse. Diese Software stelle ich unter den Bedingungen der Gnu Public License (GPL) zur Verfügung. Es gibt keine Garantie für Irgendetwas - Die Benutzung ist auf eigenes Risiko! Ich benutze die Software schon seit Jahren ohne Probleme, aber andere Computer können zu komischen Ergebnissen führen. Teste die Software erst an unkritischen Daten und verwende sie erst dann für irgendetwas wichtiges, wenn du sicher bist, dass sie so funktioniert wie sie soll. Sollte ein Bug auftreten kontaktiert mich bitte mit einer Beschreibung, so dass ich den Fehler reproduzieren kann.
Diese Software nutzt hashdeep, rsync und WinMerge, deren Lizenzen in ihrem Unterordner in Filecalibur zu finden sind.


Funktionen

In diesem Abschnitt werden die wichtigsten Funktionen von Filecalibur vorgestellt.

hashDeep - Berechne Hashes
Im Menü hashDeep->Berechne Hashes auswählen. Im Dialogfenster muss der Ordner angegeben werden, in dem die Dateien gehashed werden sollen und eine Datei, in der die Collection gespeichert werden soll. Basierend auf diesen Informationen berechnet hashdeep die Hashes der Dateien. Filcalibur wird das Ergebnis darstellen wenn hashdeep die brechnung beendet hat. Bedenke, dass jede einzelne Datei komplett eingelesen werden muss, um den Hash zu berechnen. Wenn Terabytes an Daten verarbeitet werden müssen kann diese Berechnung schon Tage dauern. In diesem Fall kann es sinnvoll sein, die Berechnung über Nacht laufen zu lassen.

Collection - Ändere Pfad
Im Menü Collection->Ändere Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Die Felder dazwischen können genutzt werden, um die Namen/Pfad-Information durch Hinzufügen oder Entfernen zu verändern. Beachte, dass du im linken Bereich des Pfades arbeitest der den obersten Ordnern entspricht. Es kann genutzt werden um den Namen des Root-Ordners zu ändern oder um die absoluten Pfadangaben in relative umzuwandeln. Oder man kann den Laufwerksbuchstaben ändern.
Außerdem lässt sich die Reihenfolge der Dateien sortieren. Das ist notwendig, da die Reihenfolge auch von der Dauer der Hashberechnung abhängt. Durch die Sortierung in Kombination mit der Anpassung der Trennzeichen erhält man eine Reihenfolge die für den Vergleich verschiedener Collections geeignet ist.

Collection - Entferne Pfad
Im Menü Collection->Entferne Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Im Feld dazwischen muss der Pfad angegeben werden, der entfernt werden soll. Alle Dateien mit passender Namen/Pfad-Information werden entfernt und die restlichen Dateien in der neuen Collection gespeichert. Es ist nützlich, um einen Unterordner aus einer Collection zu entfernen und den Rest zu behalten.

Collection - Extrahiere Pfad
Im Menü Collection->Extrahiere Pfad auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Im Feld dazwischen muss der Pfad angegeben werden, der extrahiert werden soll. Alle Dateien mit passender Namen/Pfad-Information werden in der neuen Collection gespeichert und der Rest entfernt. Es ist nützlich, um einen Unterordner aus einer Collection zu extrahieren.

Collection - Kombiniere Dateien
Im Menü Collection->Kombiniere Dateien auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei und eine zweite Collectiondatei angegeben werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Der Inhalt beider Collections wird zusammengeführt und in der neuen Collection gespeichert. Es ist nützlich, um Ordner zu einer Collection hinzuzufügen.

Collection - Positive Hashberechnung
Im Menü Collection->Positive Hashberechnung auswählen. Im Dialogfenster muss eine Test-Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zusätzlich muss eine Hash-Bibliothekcollection ausgewählt werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Alle Hashwerte der Dateien in der Test-Collection werden mit den Hashwerten der Hash-Bibliothekcollection verglichen. Nur wenn ein Hashwert in der Hash-Bibliothekcollection vorhanden ist, werden die Dateiinformationen der Test-Collection in der neuen Collection gespeichert. Es ist nützlich, um identische Dateien in verschiedenen Collection zu finden.

Collection - Negative Hashberechnung
Im Menü Collection->Negative Hashberechnung auswählen. Im Dialogfenster muss eine Test-Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zusätzlich muss eine Hash-Bibliothekcollection ausgewählt werden. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Alle Hashwerte der Dateien in der Test-Collection werden mit den Hashwerten der Hash-Bibliothekcollection verglichen. Nur wenn ein Hashwert in der Hash-Bibliothekcollection NICHT vorhanden ist, werden die Dateiinformationen der Test-Collection in der neuen Collection gespeichert. Es ist nützlich, um unbekannte Dateien in der Test-Collection zu finden, die nicht in der Hash-Bibliothekcollection sind. Diese Funktion findet nur Dateien, die in der Test-Collection sind und nicht in der Hash-Bibliothekcollection. Dateien die nur in der Hash-Bibliothekcollection werden ignoriert und finden sich nicht in der Ergebniscollection. Sollten diese gefunden werden muss man die Test-Collection und Hash-Bibliothekcollection vertauschen.

Collection - Finde Duplikate
Im Menü Collection->Finde Duplikate auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei angegeben werden, in der Regel ist schon die aktuelle Datei eingetragen. Zuletzt muss die Collectiondatei angegeben werden, in der das Ergebnis gespeichert wird. Der Inhalt der Collection wird auf mehrfach vorhandene Hashwerte geprüft und nur diese in der neuen Collection gespeichert. Es ist nützlich, um Duplikate in einer Collection zu finden.

Collection - Vergleiche zwei Dateien
Im Menü Collection->Vergleiche zwei Dateien auswählen. Im Dialogfenster muss die zu bearbeitende Collectiondatei und eine zweite Collectiondatei angegeben werden. Beide Dateien werden mit der Software WinMerge verglichen und dargestellt. Es ist nützlich, um Unterschiede in zwei Collections zu finden und zu analysieren.
Um beste Ergebnisse zu erhalten sollte die Pfadinformationen identisch sein. Falls zwei Ordner auf verschiedenen Laufwerken verglichen werden sollen, so empfielt es sich, die absoluten Pfade in relative Pfade mittes der Ändere Pfad Funktion umzuwandeln. Die Collections sollten auch sortiert werden, damit in beiden Collectionen die Dateien die gleiche Reihenfolge haben. Nun ist der Vergleich viel Aussagefähiger.

Gefährliche Werkzeuge - Rsync Ordner
Im Menü Gefährliche Werkzeuge->Rsync Ordner auswählen. Im Dialogfenster muss ein Quellordner und ein Zielordner angegeben werden. Filecalibur wird rsync benutzen, um alle Dateien vom Quellordner in den Zielordner zu kopieren. Wenn "Lösche Dateien..." ausgewählt ist, so werden alle Dateien die im Quellordner fehlen auch im Zielordner gelöscht. Es ist nützlich, um den Inhalt zweier Ordner abzugleichen.
Achtung: Sei sehr vorsichtig mit dieser Funktion. Wenn die Ordner vertauscht werden und ein leerer Ordner als Quellordner und der Orginalordner als Zielordner angegeben werden löscht rsync alles in Zielordner! Dadurch werden beide Ordner leer und haben jetzt den gleichen Inhalt!

Gefährliche Werkzeuge - Lösche Dateien nach Listeneinträgen
Im Menü Gefährliche Werkzeuge->Lösche Dateien nach Listeneinträgen auswählen. Im Dialogfenster muss eine Collectiondatei angegeben werden. Zur Sicherheit und um verwechselte Collections auszuschließen muss der Zielordner angegeben werden, in dem Filecalibur Dateien löschen darf. Dieser Ordner muss dem Pfad der Dateien in der Collection entsprechen. Filecalibur löscht dann alle Dateien der Collection von dem Datenträger.
Achtung: Sei sehr vorsichtig mit dieser Funktion da die Dateien ohne Undo gelöscht werden.

Gefährliche Werkzeuge - Lösche leere Ordner
Im Menü Gefährliche Werkzeuge->Lösche leere Ordner auswählen. Im Dialogfenster muss ein Ordner angegeben werden. Filecalibur wird alle leeren Ordner und Unterordner in diesem Verzeichnis löschen, wenn sie leer sind. Diese Funktion ist praktisch in Kombination mit Lösche Dateien nach Listeneinträgen, da diese Funktion oft leere Ordner zurücklässt. Sind diese entfernt so bleiben nur die Ordner mit Dateien übrig.


Examples of Usage

In this section we focus on scenarios were Filecalibur might be useful.

Backup

There are two types of backups in this world, one done with advanced programms and the other by copying files to a external drive without any special software. While the first is usually fast, automatized and easy it comes at the disadvantage of the dependency of the software to access the files. The second aproach is easy but you have to do it yourself and copying huge amounts of data may require quite some time. The advantage is a copy of your file system that can be accessed without any further software.
Filcalibur can help with the second type of backup. If you dont have any backup on the external drive, just copy the files in the regular filmanager - its faster then rsync. Once this is done, you just want to update the changes from your system to your external backup. Here rsync is much faster and will copy only changed files to your external drive (see Dangerous Tools - Rsync Directories).
Now the question remaining is - Are both copies identical? Therefore we calculate the hashes of each drive/folder (see Hash Calculation). That takes time, but once done it can be saved to the backup drive as well. Now we remove the absolute path part in both files so the path/filename information of both locations is identical. Dont forget to sort the output (see Collection - Modify Path). Last we can compare both files and the only difference should be within the header information (see Collection - Compare Files).

Crazy Ultrasafe Backup
Imagine we have really valuable data like pictures of the kids when they were young and copies of our diploma. Here we dont want to miss anything ever ever. First we need more than one backup drive, best would be three usb drives from different producers (to avoid processing errors). Store this backups at different places and update them one by one. Never bring them back to the same place (to avoid disasters as fire).
The very first backup is performed as described in Backup above. Save the result of the hash calculation (the collection file) on the drive as well.
Next time we perform a backup, we are really careful. This is done in four steps:
1) Is the data we want to copy still OK? We calculate the hash for the source data (see Hash Calculation). We remove the extra path information (see Collection - Modify Path) and do negative Hashing with the collection file of the old Backup (see Collection - Negative Hashing). Only the new files and the changed files which will be overwritten are displayed using the current collection as test collection and the old backup collection as hash library collection. The old files which will be deleted in the backup as well as the changed files which will be overwritten are displayed using the old backup collection as test collection and the current collection as hash library collection. We can also compare the old collection with the current version using WinMerge and jump from change to change (see Collection - Compare Files). If we are happy with the result (no files modified that should be identical, no files missing that should be there and only new files present which were added by us), we can move to the next step.
Step 2 and 4 are performed for each hard drive independently:
2) Are there errors on the data of the external drive. The answer should be no so you might skip this step, but its best to catch errors early. So we calculate the hashes of the drive/folder (see Hash Calculation). Now we remove the absolute path part in the files and sort the output (see Collection - Modify Path). Finally we compare the current files with the old collection saved on the backup volume (see Collection - Compare Files). All difference should be within the header information or the backup was changed during storage, which is not a good sign.
3) Now we sync the data. We use rsync to copy the changes to your external drive (see Dangerous Tools - Rsync Directories). Be really careful with the source and target folder. If you go wrong you sync your backup to the new folder and loose all new changes.
4) Again the question remaining is - Is the copies identical? Therefore we calculate the hashes of the external drive/folder (see Hash Calculation), remove the absolute path part in the files and sort the output (see Collection - Modify Path). Now we can compare the eternal drive collection file with the original collection file and the only difference should be within the header information (see Collection - Compare Files). Dont forget to save this file on the external drive for the next backup.
Using this method for backup a loss of data is almost impossible.

Find Duplicates
Many times duplicates excist due to kopied files or folders. To find duplicates, calculate the hash of the folder were you expect duplicates in subfolders (see Hash Calculation). Then keep only the files were a hash was found more than one (see Collection - Find Duplicates). Now you can go through all duplicates.

Find Changes
Sometimes you want to visualize differences on your file system. Maybe you want to see which files are changed once you run a certain software. You can also use it to visualize the difference between two software package releases.
First calculate the hash of the drive were you expect changes in subfolders and save the collection as "initial" (see Hash Calculation). Then do the change or run the software in doubt. Calculate the hash of the drive were you expect changes in subfolders a second time and save the collection as "after" (see Hash Calculation). Sort the collections to get identical file order in both files (see Collection - Modify Path) and do negative Hashing with the collection file "initial" and collection file "after"  (see Collection - Negative Hashing). Only the new files and the changed files are displayed using the "after" collection as test collection and the "initial" collection as hash library collection. The files which were deleted as well as the changed files are displayed using the "initial" collection as test collection and the "after" collection as hash library collection. We can also compare both collections using WinMerge and jump from change to change (see Collection - Compare Files). 

Sort the Folder Mess
Computers have the tendency to get messy and the user the tendency to loose control. Imagine you have pictures from your last vacation. You copied them from your the camera to you computer at home. Some you renamed and modified to change the colors a bit. Then you copied it to the computer at work. Some were changed there in luch break and some were changed at home. A friend gave you some more pics wich were added as well. So how to sort this mess out when you try to merge the folders into one with all the pictures?
First, I would make a copy of all folders to avoid data loss in case this goes terribly wrong. Then we calculate the hash of each folder and save the collections (see Hash Calculation). Then we do positive matching with the "work" collection using the "camera" collection as hash library collection (see Collection - Positive Hashing). The resulting file contains only files of the "work" collection that are identical to the once in the camera folder, the unchanged ones. We delete them from the storage using the result colletion of the positive matching (see Dangerous Tools - Delete Files from List). If folders remain empty they can be removed as well (see Dangerous Tools - Delete Empty Directories). Now the steps are repeated with the "home" folder instead of the "work" folder. Last the files now present in the "home" folder can be compared in a similar fashion to the files in the "work" folder. As a result, all identical files are gone and only the modified or new files remain in their respective folder. They still need to be viewed and selected by hand to combine them in one folder, but the burden of the duplicate files was removed.

Manage Collections




Frequently Asked Questions - FAQ

The file did not change, why does it have a different hash?
Mikrosoft Word/Excel, graphics files and mp3 files collect meta infomation additional to the content. So the content may be identical, but maybe some extra notes in word or the artist name in an mp3 file was changed. If only a bit changes, the hash will be totally different.













